library(ggplot2)
data("diamonds")
?diamonds
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point()
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(alpha = 1/20)
?diamonds
ggplot(aes(x = x, y = price), data = diamonds) +
geom_point(alpha = 1/20)
with(diamonds, cor.test(x, price))
with(diamonds, cor.test(y, price))
with(diamonds, cor.test(z, price))
ggplot(aes(x = depth, y = price), data = diamonds) +
geom_point(alpha = 1/20)
summary(diamonds$depth)
ggplot(aes(x = depth, y = price), data = diamonds) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(40, 80, 2))
with(diamonds, cor.test(depth, price))
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point()
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point() +
coord_cartesian(xlim = quantile(diamonds$carat, probs = 0.9),
ylim = quantile(diamonds$price, probs - 0.9))
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point() +
coord_cartesian(xlim = quantile(diamonds$carat, probs = 0.99),
ylim = quantile(diamonds$price, probs = 0.99))
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point() +
coord_cartesian(xlim = quantile(diamonds$carat, probs = 0.01),
ylim = quantile(diamonds$price, probs = 0.01))
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point() +
coord_cartesian(xlim = quantile(diamonds$carat, probs = 0.99),
ylim = quantile(diamonds$price, probs = 0.99))
quantile(diamonds$carat, probs = 0.99
quantile(diamonds$carat, probs = 0.99)
quantile(diamonds$carat, probs = 0.99)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point() +
coord_cartesian(xlim = c(0,quantile(diamonds$carat, probs = 0.99)),
ylim = c(0,quantile(diamonds$price, probs = 0.99)))
diamonds$volume <- with(diamonds, x*y*z)
View(diamonds)
ggplot(aes(x = volume, y = price), data = diamonds) +
geom_point()
with(subset(diamonds, volume != 0 | volume < 800),
cor.test(volume, price))
with(subset(diamonds, volume != 0 & volume < 800),
cor.test(volume, price))
?geom_smooth
ggplot(aes(x = volume, y = price),
data = subset(diamonds, volume !=0 & volume < 800)                                                 ) +
geom_point(alpha = 1/100) +
geom_smooth(method = 'lm')
ggplot(aes(x = volume, y = price),
data = subset(diamonds, volume !=0 & volume < 800)                                                 ) +
geom_point(alpha = 1/100) +
geom_smooth(method = 'lm') +
coord_cartesian(xlim = c(0, 850))
ggplot(aes(x = volume, y = price),
data = subset(diamonds, volume !=0 & volume < 800)                                                 ) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm') +
coord_cartesian(xlim = c(0, 850))
ggplot(aes(x = volume, y = price),
data = subset(diamonds, volume !=0 & volume < 800)                                                 ) +
geom_point(alpha = 1/10) +
geom_smooth(method = 'lm')
library(dplyr)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
View(diamondsByClarity)
diamondsByColor <- diamonds %>%
group_by(color) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
library(gridExtra)
p1 <- ggplot(aes(x = clarity, y = mean_price), data = diamondsByClarity) +
geom_bar()
p2 <- ggplot(aes(x = color, y = mean_price), data = diamondsByColor) +
geom_bar()
grid.arrange(p1, p2)
library(gridExtra)
grid.arrange(p1, p2)
p1 <- ggplot(aes(x = clarity, y = mean_price), data = diamondsByClarity) +
geom_bar(stat='identity')
p2 <- ggplot(aes(x = color, y = mean_price), data = diamondsByColor) +
geom_bar(stat='identity')
grid.arrange(p1, p2)
knitr::opts_chunk$set(echo = TRUE)
mean(subset(defaults, !is.na(CreditScoreAvg))$CreditScoreAvg)
loans <- read.csv('prosperLoanData.csv')
setwd("C:/John/Programming/Code/Udacity/Term 2/Unit 7/term7-project")
loans <- read.csv('prosperLoanData.csv')
library(ggplot2)
library(dplyr)
defaults <- subset(loans, LoanStatus == 'Defaulted')
completed <- subset(loans, LoanStatus == 'Completed')
loans$Rating <- paste(loans$CreditGrade, loans$ProsperRating..Alpha.)
ggplot(aes(x = Rating), data = defaults) +
geom_bar()
defaults <- subset(loans, LoanStatus == 'Defaulted')
completed <- subset(loans, LoanStatus == 'Completed')
ggplot(aes(x = Rating), data = defaults) +
geom_bar()
loans$CreditScoreAvg <- (loans$CreditScoreRangeLower + loans$CreditScoreRangeUpper) / 2
defaults <- subset(loans, LoanStatus == 'Defaulted')
completed <- subset(loans, LoanStatus == 'Completed')
mean(subset(defaults, !is.na(CreditScoreAvg))$CreditScoreAvg)
mean(subset(completed, !is.na(CreditScoreAvg))$CreditScoreAvg)
ggplot(aes(x = StatedMonthlyIncome), data = defaults) +
geom_histogram()
ggplot(aes(x = StatedMonthlyIncome), data = defaults) +
geom_histogram() +
scale_x_continuous(breaks = seq(0, 20000, 1000), limits = c(0, 20000))
ggplot(aes(x = StatedMonthlyIncome), data = completed) +
geom_histogram()
ggplot(aes(x = StatedMonthlyIncome), data = completed) +
geom_histogram() +
scale_x_continuous(breaks = seq(0, 20000, 1000), limits = c(0, 20000))
median(subset(defaults, !is.na(StatedMonthlyIncome))$StatedMonthlyIncome)
median(subset(completed, !is.na(StatedMonthlyIncome))$StatedMonthlyIncome)
ggplot(aes(x = DebtToIncomeRatio), data = defaults) +
geom_histogram()
ggplot(aes(x = DebtToIncomeRatio), data = defaults) +
geom_histogram() +
scale_x_continuous(limits = c(0, 2.5))
ggplot(aes(x = DebtToIncomeRatio), data = defaults) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1))
ggplot(aes(x = DebtToIncomeRatio), data = defaults) +
geom_histogram() +
scale_x_continuous(breaks = seq(0, 1, .1), limits = c(0, 1))
ggplot(aes(x = DebtToIncomeRatio), data = completed) +
geom_histogram() +
scale_x_continuous(breaks = seq(0, 1, .1), limits = c(0, 1))
median(subset(defaults, !is.na(DebtToIncomeRatio))$DebtToIncomeRatio)
median(subset(completed, !is.na(DebtToIncomeRatio))$DebtToIncomeRatio)
ggplot(aes(x = BorrowerAPR), data = defaults) +
geom_histogram()
ggplot(aes(x = BorrowerAPR), data = defaults) +
geom_histogram(binwidt = .01)
ggplot(aes(x = BorrowerAPR), data = defaults) +
geom_histogram(binwidth = .01)
ggplot(aes(x = BorrowerAPR), data = defaults) +
geom_histogram(binwidth = .01, breaks = seq(0, .5, .05))
ggplot(aes(x = BorrowerAPR), data = defaults) +
geom_histogram(binwidth = .01) +
scale_x_continuous(breaks = seq(0, .5, .05))
```{r}
View(completed)
ggplot(aes(x = BorrowerAPR), data = completed) +
geom_histogram(binwidth = .01)
ggplot(aes(x = BorrowerAPR), data = completed) +
geom_histogram(binwidth = .01) +
scale_x_continuous(breaks = seq(0, .5, .05))
median(subset(defaults, !is.na(BorrowerAPR))$BorrowerAPR)
median(subset(completed, !is.na(BorrowerAPR))$BorrowerAPR)
ggplot(aes(x = OpenCreditLines), data = defaults) +
geom_histogram()
ggplot(aes(x = OpenCreditLines), data = defaults) +
geom_histogram(binwidth = 1)
ggplot(aes(x = OpenCreditLines), data = completed) +
geom_histogram(binwidth = 1)
median(subset(defaults, !is.na(OpenCreditLines))$OpenCreditLines)
median(subset(completed, !is.na(OpenCreditLines))$OpenCreditLines)
mean(subset(defaults, !is.na(OpenCreditLines))$OpenCreditLines)
mean(subset(completed, !is.na(OpenCreditLines))$OpenCreditLines)
ggplot(aes(x = IncomeVerifiable), data = defaults) +
geom_bar()
ggplot(aes(x = IncomeVerifiable), data = completed) +
geom_bar()
ggplot(aes(x = BankcardUtilization), data = defaults) +
geom_histogram()
ggplot(aes(x = BankcardUtilization), data = defaults) +
geom_histogram() +
scale_x_continuous(breaks = seq(0, 2, .1), limits = c(0, 2))
ggplot(aes(x = BankcardUtilization), data = defaults) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 2, 0.1), limits = c(0, 2))
ggplot(aes(x = BankcardUtilization), data = defaults) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 2, 0.1), limits = c(0, 2))
ggplot(aes(x = BankcardUtilization), data = completed) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 2, 0.1), limits = c(0, 2))
mean(subset(defaults, !is.na(BankcardUtilization))$BankcardUtilization)
mean(subset(completed, !is.na(BankcardUtilization))$BankcardUtilization)
median(subset(defaults, !is.na(BankcardUtilization))$BankcardUtilization)
median(subset(completed, !is.na(BankcardUtilization))$BankcardUtilization)
mod_loans <- subset(loans, colnames(loans) %in% wantedcols)
wantedcols <- c('LoanStatus', 'Rating', 'CreditScoreAvg',
'OpenCreditLines', 'BankcardUtilization',
'DebtToIncomeRatio', 'StatedMonthlyIncome',
'BorrowerAPR')
mod_loans <- subset(loans, colnames(loans) %in% wantedcols)
View(mod_loans)
mod_loans <- loans[wantedcols]
mod_defaults <- defaults[wantedcols]
mod_completed <- completed[wantedcols]
mod_resuts <- subset(mod_loans, LoanStatus == 'Competed' |
LoanStatus == 'Defaulted')
mod_resuts <- subset(mod_loans, LoanStatus == 'Completed' |
LoanStatus == 'Defaulted')
mod_results <- subset(mod_loans, LoanStatus == 'Completed' |
LoanStatus == 'Defaulted')
mod_results$result <- ifelse(mod_results$LoanStatus == 'Completed', 1, 0)
View(completed)
mod_loans$rating.numeric <- ifelse(mod_loans$Rating == 'AA', 7,
ifelse(mod_loans$Rating == 'A', 6,
ifelse(mod_loans$Rating == 'B', 5,
ifelse(mod_loans$Rating == 'C', 4,
ifelse(mod_loans$Rating == 'D', 3,
ifelse(mod_loans$Rating == 'E', 2,
ifelse(mod_loans$Rating == 'HR',1,                                        0))))))
mod_loans$rating.numeric <- ifelse(mod_loans$Rating == 'AA', 7,
mod_loans$rating.numeric <- ifelse(mod_loans$Rating == 'AA', 7,
ifelse(mod_loans$Rating == 'A', 6,
ifelse(mod_loans$Rating == 'B', 5,
ifelse(mod_loans$Rating == 'C', 4,
ifelse(mod_loans$Rating == 'D', 3,
ifelse(mod_loans$Rating == 'E', 2,
ifelse(mod_loans$Rating == 'HR',1,                                        0)))))))
View(mod_loans)
mod_loans$rating.numeric <- ifelse(mod_loans$Rating == 'AA', 7,
ifelse(mod_loans$Rating == 'A', 6,
ifelse(mod_loans$Rating == 'B', 5,
ifelse(mod_loans$Rating == 'C', 4,
ifelse(mod_loans$Rating == 'D', 3,
ifelse(mod_loans$Rating == 'E', 2,
ifelse(mod_loans$Rating == 'HR',1,                                        0)))))))
mod_loans$rating.numeric <- NA
mod_loans$rating.numeric <- ifelse(mod_loans$Rating == 'AA', 7, 0)
View(mod_loans)
View(loans)
table(loans$CreditGrade)
table(loans$Rating)
is.na(loans$CreditGrade)
sum(is.na(loans$CreditGrade))
sum(loans$CreditGrade == ' ')
sum(loans$CreditGrade == '')
table(loans$CreditGrade)
sum(loans$ProsperRating..Alpha. == '')
loans$CreditGrade <- ifelse(loans$CreditGrade == '', NA, loans$CreditGrade)
loans$ProsperRating..Alpha. <- ifelse(loans$ProsperRating..Alpha. == '', NA, loans$ProsperRating..Alpha.)
loans$Rating <- paste(loans$CreditGrade, loans$ProsperRating..Alpha.)
table(loans$Rating)
table(loans$CreditGrade)
loans <- read.csv('prosperLoanData.csv')
table(loans$CreditGrade)
loans$CreditGrade <- ifelse(loans$CreditGrade == '', NA, loans$CreditGrade)
tabe(loans$CreditGrade)
table(loans$CreditGrade)
loans <- read.csv('prosperLoanData.csv')
loans$CreditGrade <- ifelse(loans$CreditGrade == '', 0, loans$CreditGrade)
table(loans$CreditGrade)
loans <- read.csv('prosperLoanData.csv')
loans <- read.csv('prosperLoanData.csv')
loans$Rating <- ifelse(loans$CreditGrade == '', loans$ProsperRating..Alpha., loans$CreditGrade)
table(loans$Rating)
loans <- read.csv('prosperLoanData.csv')
View(loans)
table(loans$CreditGrade
)
table(loans$ProsperRating..Alpha.)
loans$Rating <- loans$ProsperRating..Alpha.
table(loans$Rating)
sum(loans$Rating == '')
levels(loans$Rating)
levels(loans$CreditGrade)
ifelse(loans$Rating == '', loans$Rating <- loans$CreditGrade,
loans$Rating <- loans$Rating)
table(loans$Rating)
ifelse(loans$Rating == '', loans$Rating <- loans$CreditGrade,
loans$Rating <- loans$ProsperRating..Alpha.)
table(loans$Rating)
loans$Rating <- loans$ProsperRating..Alpha.
table(loans$Rating)
levels(loans$Rating)
loans$Rating <- as.character(loans$ProsperRating..Alpha.)
table(loans$Rating)
levels(loans$Rating)
loans$Rating <- paste(as.character(loans$ProsperRating..Alpha.),
as.character(loans$CreditGrade))
table(loans$Rating)
loans$CreditGrade <- as.character(loans$CreditGrade)
loans$ProsperRating..Alpha. <- as.character(loans$ProsperRating..Alpha.)
table(loans$CreditGrade)
sum(loans$CreditGrade == '')
loans <- read.csv('prosperLoanData.csv', na.strings = '')
table(loans$CreditGrade)
loans$Rating <- paste(loans$CreditGrade, loans$ProsperRating..Alpha.)
table(loans$Rating)
loans$Rating <- ifelse(loans$CreditGrade == NA,
as.character(loans$ProsperRating..Alpha.),
as.character(loans$CreditGrade))
table(loans$Rating)
loans$Rating <- ifelse(is.na(loans$CreditGrade),
as.character(loans$ProsperRating..Alpha.),
as.character(loans$CreditGrade))
table(loans$Rating)
loans$Rating = factor(loans$Rating,
levels(loans$Rating)[c(2,1,3:8)])
levels(loans$Rating)
loans$Rating = factor(loans$Rating,
loans$Rating[c(2,1,3:8)])
levels(loans$Rating)
loans$Rating <- ifelse(is.na(loans$CreditGrade),
as.character(loans$ProsperRating..Alpha.),
as.character(loans$CreditGrade))
loans$Rating = factor(loans$Rating,
table(loans$Rating)[c(2,1,3:8)])
table(loans$Rating)
loans$Rating <- ifelse(is.na(loans$CreditGrade),
as.character(loans$ProsperRating..Alpha.),
as.character(loans$CreditGrade))
table(loans$Rating)
table(loans$Rating)[1]
loans$Rating = factor(loans$Rating,
c('AA', 'A', 'B', 'C', 'D', 'E', 'HR', 'NC'))
levels(loans$Rating)
defaults <- subset(loans, LoanStatus == 'Defaulted')
completed <- subset(loans, LoanStatus == 'Completed')
ggplot(aes(x = Rating), data = defaults) +
geom_bar()
ggplot(aes(x = Rating), data = completed) +
geom_bar()
ggplot(aes(x = EmploymentStatus), data = defaults) +
geom_bar()
ggplot(aes(x = EmploymentStatus), data = completed) +
geom_bar()
loans$CreditScoreAvg <- (loans$CreditScoreRangeLower + loans$CreditScoreRangeUpper) / 2
defaults <- subset(loans, LoanStatus == 'Defaulted')
completed <- subset(loans, LoanStatus == 'Completed')
ggplot(aes(x = CreditScoreAvg), data = defaults) +
geom_histogram(binwidth = 19)
ggplot(aes(x = CreditScoreAvg), data = completed) +
geom_histogram(binwidth = 19)
mean(subset(defaults, !is.na(CreditScoreAvg))$CreditScoreAvg)
mean(subset(completed, !is.na(CreditScoreAvg))$CreditScoreAvg)
ggplot(aes(x = StatedMonthlyIncome), data = defaults) +
geom_histogram() +
scale_x_continuous(breaks = seq(0, 20000, 1000), limits = c(0, 20000))
ggplot(aes(x = StatedMonthlyIncome), data = completed) +
geom_histogram() +
scale_x_continuous(breaks = seq(0, 20000, 1000), limits = c(0, 20000))
median(subset(defaults, !is.na(StatedMonthlyIncome))$StatedMonthlyIncome)
median(subset(completed, !is.na(StatedMonthlyIncome))$StatedMonthlyIncome)
ggplot(aes(x = DebtToIncomeRatio), data = defaults) +
geom_histogram() +
scale_x_continuous(breaks = seq(0, 1, .1), limits = c(0, 1))
ggplot(aes(x = DebtToIncomeRatio), data = completed) +
geom_histogram() +
scale_x_continuous(breaks = seq(0, 1, .1), limits = c(0, 1))
median(subset(defaults, !is.na(DebtToIncomeRatio))$DebtToIncomeRatio)
median(subset(completed, !is.na(DebtToIncomeRatio))$DebtToIncomeRatio)
ggplot(aes(x = BorrowerAPR), data = defaults) +
geom_histogram(binwidth = .01) +
scale_x_continuous(breaks = seq(0, .5, .05))
ggplot(aes(x = BorrowerAPR), data = completed) +
geom_histogram(binwidth = .01) +
scale_x_continuous(breaks = seq(0, .5, .05))
median(subset(defaults, !is.na(BorrowerAPR))$BorrowerAPR)
median(subset(completed, !is.na(BorrowerAPR))$BorrowerAPR)
ggplot(aes(x = OpenCreditLines), data = defaults) +
geom_histogram(binwidth = 1)
ggplot(aes(x = OpenCreditLines), data = completed) +
geom_histogram(binwidth = 1)
median(subset(defaults, !is.na(OpenCreditLines))$OpenCreditLines)
median(subset(completed, !is.na(OpenCreditLines))$OpenCreditLines)
mean(subset(defaults, !is.na(OpenCreditLines))$OpenCreditLines)
mean(subset(completed, !is.na(OpenCreditLines))$OpenCreditLines)
```{r}
ggplot(aes(x = IncomeVerifiable), data = defaults) +
geom_bar()
ggplot(aes(x = IncomeVerifiable), data = completed) +
geom_bar()
ggplot(aes(x = BankcardUtilization), data = defaults) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 2, 0.1), limits = c(0, 2))
ggplot(aes(x = BankcardUtilization), data = completed) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 2, 0.1), limits = c(0, 2))
mean(subset(defaults, !is.na(BankcardUtilization))$BankcardUtilization)
mean(subset(completed, !is.na(BankcardUtilization))$BankcardUtilization)
median(subset(defaults, !is.na(BankcardUtilization))$BankcardUtilization)
median(subset(completed, !is.na(BankcardUtilization))$BankcardUtilization)
wantedcols <- c('LoanStatus', 'Rating', 'CreditScoreAvg',
'OpenCreditLines', 'BankcardUtilization',
'DebtToIncomeRatio', 'StatedMonthlyIncome',
'BorrowerAPR')
mod_loans <- loans[wantedcols]
mod_results <- subset(mod_loans, LoanStatus == 'Completed' |
LoanStatus == 'Defaulted')
mod_results$result <- ifelse(mod_results$LoanStatus == 'Completed', 1, 0)
mod_loans$rating.numeric <- ifelse(mod_loans$Rating == 'AA', 7,
ifelse(mod_loans$Rating == 'A', 6,
ifelse(mod_loans$Rating == 'B', 5,
ifelse(mod_loans$Rating == 'C', 4,
ifelse(mod_loans$Rating == 'D', 3,
ifelse(mod_loans$Rating == 'E', 2,
ifelse(mod_loans$Rating == 'HR',1,                                        0)))))))
table(mod_loans$rating.numeric)
table(mod_loans$Rating)
